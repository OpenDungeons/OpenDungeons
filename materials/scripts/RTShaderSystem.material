
// RTShader System materials.

// This is a single pass per pixel lighting based material.
// All scene lights will be applied within a single rendering pass.
// It saves geometry overdraw but it consumes more instructions during vertex and pixel shaders.
// Use this method when your scene uses small amount of lights. (1-3).
material RTSS/PerPixel_SinglePass
{
	technique
	{
		pass
		{
			// Turn off specular in order to use only diffuse based bump map technique.
			specular 1.0 1.0 1.0 32
			
			texture_unit
			{
				texture Panels_Diffuse.png
			}				

	        //![rtss_per_pixel]
			// RT Shader system section.
 			rtshader_system
 			{	 	
 				// Override lighting stage with per pixel lighting. 			
 				lighting_stage per_pixel				
 			}	
 			//![rtss_per_pixel]		
		}				
	}
}

// This is a multi pass normal map lighting based material.
// It acts as any other multi light material.
// This material defined to use only one type of light per lighting pass because the RTSS need to
// know what code to produce for the iterative lighting pass, otherwise it will throw an exception.
// It support any number of lights drawing but it uses more geometry drawing. 
// Use this method when your scene uses large amount of lights. (3-8).
material RTSS/NormalMapping_MultiPass
{
	technique
	{
		// Base ambient pass
		pass ambient
		{
			// base colours, not needed for rendering, but as information
			// to lighting pass categorisation routine
			ambient 1 1 1
			diffuse 0 0 0 
			specular 0 0 0 0 
			
			// RT Shader system section.			
 			rtshader_system
 			{	
 				// Override dynamic light count with zero light count.
 				// Doing this will cause the RTSS to create 
 				// ambient lighting shaders.
 				// If not doing that the RTSS it will use the current scene light count
 				// which will result in full lighting calculation in this pass.
				light_count 0 0 0
			}
		}
		
		// Lighting pass.
		pass lighting
		{
			// Comment the specular in order to use only diffuse based normal map technique.
			specular 1.0 1.0 1.0 32
			
			// base colours, not needed for rendering, but as information
			// to lighting pass categorisation routine
			ambient 0 0 0 
			
			// do this for each point light
			// You MUST specify the light type when working with the RT Shader System in iterative lighting method. 
			// otherwise an exception will be thrown.
			iteration once_per_light point

			scene_blend add		
			
			// RT Shader system section.
 			rtshader_system
 			{	 	
 				// Override lighting stage with normal map lighting.
 				lighting_stage normal_map Panels_Normal_Tangent.png tangent_space
 			}			
		}	
		
		// Decal pass
		pass decal
		{
			
			lighting off
			
			scene_blend dest_colour zero
			texture_unit decalmap
			{
				texture Panels_Diffuse.png
			}			
		}			
	}
}