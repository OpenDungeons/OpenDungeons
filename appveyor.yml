os:
  - Windows Server 2012 R2
configuration: Release
environment:
  matrix:
    - generator: "mingw32"
    - generator: "msvc12"
branches:
  only:
  - development
clone_depth: 10
install:
# We need some packages from MinGW like binutils-dev that are not installed on the server. Because we want to make sure everything is consistent, we download the whole package
  - ps: |
      if($env:generator -eq 'mingw32')
      {
          mkdir c:\dev
          $file = "C:\dev\MinGW32.7z"
          $urlDeps = "http://download.tuxfamily.org/opendungeons/dependency/MinGW32.7z"
          Write-Host "Downloading MinGW32"
          cmd /c curl -fsSL -o $file $urlDeps
          Write-Host "Unzip MinGW32"
          7z x -oC:\dev $file
      }
# download dependencies
  - ps: |
      $file = "C:\od-deps-win32.7z"
      $urlDeps = "http://download.tuxfamily.org/opendungeons/dependency/od-deps-win32.7z"
      Write-Host "Downloading deps"
      cmd /c curl -fsSL -o $file $urlDeps
      Write-Host "Unzip deps"
      7z x -oC:\ $file
  - set OD_DEPS=C:\od-deps-win32
# We try to keep as few things in path as possible to make sure cmake won't find a needed library in some unexpected place
  - if "%generator%" == "mingw32" (set "PATH=c:\dev\MinGW\bin;C:\od-deps-win32\bin\mingw48;")
  - if "%generator%" == "msvc12" (set "PATH=C:\Program Files (x86)\MSBuild\12.0\Bin;C:\od-deps-win32\bin\msvc;")
  - echo %PATH%

build_script:
  - if [%generator%]==[msvc12] "C:\Program Files (x86)\CMake\bin\cmake" -G "Visual Studio 12" -DOD_BUILD_TESTING=ON -DCMAKE_INSTALL_PREFIX="%cd%/inst" && msbuild INSTALL.vcxproj /verbosity:normal  /p:Configuration=Release
  - if [%generator%]==[mingw32] "C:\Program Files (x86)\CMake\bin\cmake" -G "MinGW Makefiles" -DOD_BUILD_TESTING=ON -DCMAKE_INSTALL_PREFIX="%cd%/inst" -DCMAKE_BUILD_TYPE=Release && mingw32-make install

test_script:
  - scripts\win32\OpenDungeonsTests.bat

artifacts:
  - path: OpenDungeons.exe
    name: OpenDungeons exe
  - path: Release/OpenDungeons.exe
    name: OpenDungeons exe
